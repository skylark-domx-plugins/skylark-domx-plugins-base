{"version":3,"sources":["skylark-domx-plugins-base.js"],"names":["define","skylark","attach","pluginKlasses","shortcuts","types","objects","arrays","klass","events","Event","Listener","slice","Array","prototype","compact","isDefined","isPlainObject","isFunction","isString","mixin","isEmptyObject","safeMixin","parse","event","segs","split","name","ns","join","queues","Map","Emitter","inherit","_prepareArgs","e","args","concat","on","selector","data","callback","ctx","one","self","this","_hub","each","type","fn","undefined","Error","forEach","parsed","push","emit","Object","defineProperty","value","call","arguments","eventName","listeners","len","length","reCompact","i","isImmediatePropagationStopped","listener","startsWith","apply","queueEmit","map","get","set","oldTimeout","delete","window","clearTimeout","timeout","setTimeout","size","trigger","listened","evtArr","_events","off","evts","liveEvents","_","indexOf","queueTrigger","funcs","noder","datax","eventer","finder","geom","styler","fx","$","elmx","domx","plugins","parentClass","ctor","hasOwnProperty","superclass","getPrototypeOf","Plugin","klassName","_domx","_construct","elm","options","_elm","_initOptions","constructor","cache","defaults","ctors","unshift","destroy","_destroy","unlistenTo","removeData","pluginName","noop","_delay","handler","delay","instance","_velm","_$elm","option","key","parts","curOption","shift","pop","_setOptions","_setOption","getUID","prefix","Math","random","document","getElementById","ensureListenedEmitter","obj","listenTo","isArray","instantiate","arg1","arg2","arg3","arg4","arg5","pair","instanceDataName","pluginInstance","reset","pluginKlass","shortcutter","extfn","plugin","methodName","charAt","ret","register","shortcutName","shortcut","returnValue","args2","partial","main"],"mappings":"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","file":"../skylark-domx-plugins-base.js","sourcesContent":["define('skylark-domx-plugins-base/plugins',[\r\n    \"skylark-langx-ns\"\r\n], function(skylark) {\r\n    \"use strict\";\r\n\r\n    var pluginKlasses = {},\r\n        shortcuts = {};\r\n\r\n\r\n    return  skylark.attach(\"domx.plugins\",{\r\n        pluginKlasses,\r\n        shortcuts\r\n    });\r\n});\ndefine('skylark-langx-events/Emitter',[\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\",\r\n  \"skylark-langx-arrays\",\r\n  \"skylark-langx-klass\",\r\n  \"./events\",\r\n  \"./event\",\r\n  \"./listener\"\r\n],function(types,objects,arrays,klass,events,Event,Listener){\r\n    var slice = Array.prototype.slice,\r\n        compact = arrays.compact,\r\n        isDefined = types.isDefined,\r\n        isPlainObject = types.isPlainObject,\r\n        isFunction = types.isFunction,\r\n        isString = types.isString,\r\n        isEmptyObject = types.isEmptyObject,\r\n        mixin = objects.mixin,\r\n        safeMixin = objects.safeMixin;\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            name: segs[0],\r\n            ns: segs.slice(1).join(\" \")\r\n        };\r\n    }\r\n\r\n    \r\n    var queues  = new Map();\r\n\r\n\r\n    var Emitter = Listener.inherit({\r\n        _prepareArgs : function(e,args) {\r\n            if (isDefined(args)) {\r\n                args = [e].concat(args);\r\n            } else {\r\n                args = [e];\r\n            }\r\n            return args;\r\n        },\r\n\r\n        on: function(events, selector, data, callback, ctx, /*used internally*/ one) {\r\n            var self = this,\r\n                _hub = this._hub || (this._hub = {});\r\n\r\n            if (isPlainObject(events)) {\r\n                ctx = callback;\r\n                each(events, function(type, fn) {\r\n                    self.on(type, selector, data, fn, ctx, one);\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (!isString(selector) && !isFunction(callback)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = selector;\r\n                selector = undefined;\r\n            }\r\n\r\n            if (isFunction(data)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            if (!callback ) {\r\n                throw new Error(\"No callback function\");\r\n            } else if (!isFunction(callback)) {\r\n                throw new Error(\"The callback  is not afunction\");\r\n            }\r\n\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(event) {\r\n                var parsed = parse(event),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                (_hub[name] || (_hub[name] = [])).push({\r\n                    fn: callback,\r\n                    selector: selector,\r\n                    data: data,\r\n                    ctx: ctx,\r\n                    ns : ns,\r\n                    one: one\r\n                });\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        one: function(events, selector, data, callback, ctx) {\r\n            return this.on(events, selector, data, callback, ctx, 1);\r\n        },\r\n\r\n        emit: function(e /*,argument list*/ ) {\r\n            if (!this._hub) {\r\n                return this;\r\n            }\r\n\r\n            var self = this;\r\n\r\n            if (isString(e)) {\r\n                e = new Event(e); //new CustomEvent(e);\r\n            }\r\n\r\n            Object.defineProperty(e,\"target\",{\r\n                value : this\r\n            });\r\n\r\n            var args = slice.call(arguments, 1);\r\n\r\n            args = this._prepareArgs(e,args);\r\n\r\n            [e.type || e.name, \"all\"].forEach(function(eventName) {\r\n                var parsed = parse(eventName),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                var listeners = self._hub[name];\r\n                if (!listeners) {\r\n                    return;\r\n                }\r\n\r\n                var len = listeners.length,\r\n                    reCompact = false;\r\n\r\n                for (var i = 0; i < len; i++) {\r\n                    if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                        return this;\r\n                    }\r\n                    var listener = listeners[i];\r\n                    if (ns && (!listener.ns ||  !listener.ns.startsWith(ns))) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (listener.data) {\r\n                        e.data = mixin({}, listener.data, e.data);\r\n                    }\r\n                    if (args.length == 2 && isPlainObject(args[1])) {\r\n                        e.data = e.data || {};\r\n                        mixin(e.data,args[1]);\r\n                    }\r\n\r\n                    listener.fn.apply(listener.ctx, args);\r\n                    if (listener.one) {\r\n                        listeners[i] = null;\r\n                        reCompact = true;\r\n                    }\r\n                }\r\n\r\n                if (reCompact) {\r\n                    self._hub[eventName] = compact(listeners);\r\n                }\r\n\r\n            });\r\n            return this;\r\n        },\r\n\r\n        queueEmit : function (event) {\r\n            const type = event.type || event;\r\n            let map = queues.get(this);\r\n            if (!map) {\r\n                map = new Map();\r\n                queues.set(this, map);\r\n            }\r\n            const oldTimeout = map.get(type);\r\n            map.delete(type);\r\n            window.clearTimeout(oldTimeout);\r\n            const timeout = window.setTimeout(() => {\r\n                if (map.size === 0) {\r\n                    map = null;\r\n                    queues.delete(this);\r\n                }\r\n                this.trigger(event);\r\n            }, 0);\r\n            map.set(type, timeout);\r\n        },\r\n\r\n        listened: function(event) {\r\n            var evtArr = ((this._hub || (this._events = {}))[event] || []);\r\n            return evtArr.length > 0;\r\n        },\r\n\r\n        off: function(events, callback) {\r\n            if (!events) {\r\n              this._hub = null;\r\n              return;\r\n            }\r\n            var _hub = this._hub || (this._hub = {});\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(event) {\r\n                var parsed = parse(event),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                var evts = _hub[name];\r\n\r\n                if (evts) {\r\n                    var liveEvents = [];\r\n\r\n                    if (callback || ns) {\r\n                        for (var i = 0, len = evts.length; i < len; i++) {\r\n                            \r\n                            if (callback && evts[i].fn !== callback && evts[i].fn._ !== callback) {\r\n                                liveEvents.push(evts[i]);\r\n                                continue;\r\n                            } \r\n\r\n                            if (ns && (!evts[i].ns || evts[i].ns.indexOf(ns)!=0)) {\r\n                                liveEvents.push(evts[i]);\r\n                                continue;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (liveEvents.length) {\r\n                        _hub[name] = liveEvents;\r\n                    } else {\r\n                        delete _hub[name];\r\n                    }\r\n\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        trigger  : function() {\r\n            return this.emit.apply(this,arguments);\r\n        },\r\n\r\n        queueTrigger : function (event) {\r\n            return this.queueEmit.apply(this,arguments);\r\n        }\r\n\r\n    });\r\n\r\n\r\n    return events.Emitter = Emitter;\r\n\r\n});\ndefine('skylark-domx-plugins-base/plugin',[\r\n    \"skylark-langx-ns\",\r\n    \"skylark-langx-types\",\r\n    \"skylark-langx-objects\",\r\n    \"skylark-langx-funcs\",\r\n    \"skylark-langx-events/Emitter\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-data\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-styler\",\r\n    \"skylark-domx-fx\",\r\n    \"skylark-domx-query\",\r\n    \"skylark-domx-velm\",\r\n    \"skylark-domx\",\r\n    \"./plugins\"\r\n], function(\r\n    skylark,\r\n    types,\r\n    objects,\r\n    funcs,\r\n    Emitter, \r\n    noder, \r\n    datax, \r\n    eventer, \r\n    finder, \r\n    geom, \r\n    styler, \r\n    fx, \r\n    $, \r\n    elmx,\r\n    domx,\r\n    plugins\r\n) {\r\n    \"use strict\";\r\n\r\n    var slice = Array.prototype.slice,\r\n        concat = Array.prototype.concat;\r\n\r\n    function parentClass(ctor){\r\n        if (ctor.hasOwnProperty(\"superclass\")) {\r\n            return ctor.superclass;\r\n        }\r\n\r\n        return Object.getPrototypeOf(ctor);\r\n    }\r\n\r\n \r\n    var Plugin =   Emitter.inherit({\r\n        klassName: \"Plugin\",\r\n\r\n        _domx : domx,\r\n\r\n        _construct : function(elm,options) {\r\n           this._elm = elm;\r\n           this._initOptions(options);\r\n        },\r\n\r\n        _initOptions : function(options) {\r\n          var ctor = this.constructor,\r\n              cache = ctor.cache = (ctor.hasOwnProperty(\"cache\") ? ctor.cache : {}),\r\n              defaults = cache.defaults;\r\n          if (!defaults) {\r\n            var  ctors = [];\r\n            do {\r\n              ctors.unshift(ctor);\r\n              if (ctor === Plugin) {\r\n                break;\r\n              }\r\n              ctor = parentClass(ctor);\r\n            } while (ctor);\r\n\r\n            defaults = cache.defaults = {};\r\n            for (var i=0;i<ctors.length;i++) {\r\n              ctor = ctors[i];\r\n              if (ctor.prototype.hasOwnProperty(\"options\")) {\r\n                objects.mixin(defaults,ctor.prototype.options,true);\r\n              }\r\n              if (ctor.hasOwnProperty(\"options\")) {\r\n                objects.mixin(defaults,ctor.options,true);\r\n              }\r\n            }\r\n          }\r\n          Object.defineProperty(this,\"options\",{\r\n            value :objects.mixin({},defaults,options,true)\r\n          });\r\n\r\n          //return this.options = langx.mixin({},defaults,options);\r\n          return this.options;\r\n        },\r\n\r\n\r\n        destroy: function() {\r\n\r\n            this._destroy();\r\n\r\n            // remove all event lisener\r\n            this.unlistenTo();\r\n            // remove data \r\n            datax.removeData(this._elm,this.pluginName );\r\n        },\r\n\r\n        _destroy: funcs.noop,\r\n\r\n        _delay: function( handler, delay ) {\r\n            function handlerProxy() {\r\n                return ( typeof handler === \"string\" ? instance[ handler ] : handler )\r\n                    .apply( instance, arguments );\r\n            }\r\n            var instance = this;\r\n            return setTimeout( handlerProxy, delay || 0 );\r\n        },\r\n\r\n        elmx : function(elm) {\r\n            if (elm) {\r\n                return elmx(elm);\r\n            }\r\n            if (!this._velm) {\r\n                this._velm = elmx(this._elm);\r\n            }\r\n            return this._velm;\r\n        },\r\n\r\n        $ : function(elm) {\r\n            if (elm) {\r\n                return $(elm,this._elm);\r\n            }\r\n            if (!this._$elm) {\r\n                this._$elm = $(this._elm);\r\n            }            \r\n            return this._$elm;\r\n        },\r\n\r\n        option: function( key, value ) {\r\n            var options = key;\r\n            var parts;\r\n            var curOption;\r\n            var i;\r\n\r\n            if ( arguments.length === 0 ) {\r\n\r\n                // Don't return a reference to the internal hash\r\n                return objects.mixin( {}, this.options );\r\n            }\r\n\r\n            if ( typeof key === \"string\" ) {\r\n\r\n                // Handle nested keys, e.g., \"foo.bar\" => { foo: { bar: ___ } }\r\n                options = {};\r\n                parts = key.split( \".\" );\r\n                key = parts.shift();\r\n                if ( parts.length ) {\r\n                    curOption = options[ key ] = objects.mixin( {}, this.options[ key ] );\r\n                    for ( i = 0; i < parts.length - 1; i++ ) {\r\n                        curOption[ parts[ i ] ] = curOption[ parts[ i ] ] || {};\r\n                        curOption = curOption[ parts[ i ] ];\r\n                    }\r\n                    key = parts.pop();\r\n                    if ( arguments.length === 1 ) {\r\n                        return curOption[ key ] === undefined ? null : curOption[ key ];\r\n                    }\r\n                    curOption[ key ] = value;\r\n                } else {\r\n                    if ( arguments.length === 1 ) {\r\n                        return this.options[ key ] === undefined ? null : this.options[ key ];\r\n                    }\r\n                    options[ key ] = value;\r\n                }\r\n            }\r\n\r\n            this._setOptions( options );\r\n\r\n            return this;\r\n        },\r\n\r\n        _setOptions: function( options ) {\r\n            var key;\r\n\r\n            for ( key in options ) {\r\n                this._setOption( key, options[ key ] );\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        _setOption: function( key, value ) {\r\n\r\n            this.options[ key ] = value;\r\n\r\n            return this;\r\n        },\r\n\r\n        getUID : function (prefix) {\r\n            prefix = prefix || \"plugin\";\r\n            do prefix += ~~(Math.random() * 1000000)\r\n            while (document.getElementById(prefix))\r\n            return prefix;\r\n        },\r\n\r\n        elm : function() {\r\n            return this._elm;\r\n        },\r\n\r\n        ensureListenedEmitter : function(obj) {\r\n            if (!obj.on) {\r\n                return $(obj)\r\n            }\r\n            return obj;\r\n        },\r\n\r\n        listenTo : function(obj, event, selector,callback, /*used internally*/ one) {\r\n            if (types.isString(obj) || types.isArray(obj) || types.isPlainObject(obj)) {\r\n                one = callback;\r\n                callback = selector;\r\n                selector = event;\r\n                event = obj;\r\n                obj = this._elm;\r\n            }\r\n            return Emitter.prototype.listenTo.call(this,obj, event, selector,callback, one)\r\n        },\r\n\r\n        unlistenTo : function(obj, event, callback) {\r\n            if (types.isString(obj) || types.isArray(obj) || types.isPlainObject(obj)) {\r\n                callback = event;\r\n                event = obj;\r\n                obj = this._elm;\r\n            }\r\n            return Emitter.prototype.unlistenTo.call(this,obj, event, callback)\r\n        },\r\n\r\n\r\n    });\r\n\r\n\r\n    return  plugins.Plugin = Plugin;\r\n});\ndefine('skylark-domx-plugins-base/instantiate',[\r\n    \"skylark-domx-data\",\r\n    \"./plugins\",\r\n    \"./plugin\"\r\n], function(\r\n    datax, \r\n    plugins,\r\n    Plugin\r\n) {\r\n    \"use strict\";\r\n\r\n    var pluginKlasses = plugins.pluginKlasses;\r\n\r\n    /*\r\n     * Create or get or destory a plugin instance assocated with the element.\r\n     */\r\n    function instantiate(elm,pluginName,options,arg1,arg2,arg3,arg4,arg5) {\r\n        var pair = pluginName.split(\":\"),\r\n            instanceDataName = pair[1];\r\n        pluginName = pair[0];\r\n\r\n        if (!instanceDataName) {\r\n            instanceDataName = pluginName;\r\n        }\r\n\r\n        var pluginInstance = datax.data( elm, instanceDataName );\r\n\r\n        if (options === \"instance\") {\r\n            return pluginInstance;\r\n        } else if (options === \"destroy\") {\r\n            if (!pluginInstance) {\r\n                throw new Error (\"The plugin instance is not existed\");\r\n            }\r\n            pluginInstance.destroy();\r\n            //datax.removeData( elm, pluginName);\r\n            pluginInstance = undefined;\r\n        } else {\r\n            if (!pluginInstance) {\r\n                if (options !== undefined && typeof options !== \"object\") {\r\n                    throw new Error (\"The options must be a plain object\");\r\n                }\r\n                var pluginKlass = pluginKlasses[pluginName]; \r\n                pluginInstance = new pluginKlass(elm,options,arg1,arg2,arg3,arg4,arg5);\r\n                datax.data( elm, instanceDataName,pluginInstance );\r\n            } else if (options) {\r\n                pluginInstance.reset(options);\r\n            }\r\n        }\r\n\r\n        return pluginInstance;\r\n    }\r\n\r\n    Plugin.instantiate = function(elm,options) {\r\n        return instantiate(elm,this.prototype.pluginName,options);\r\n    };\r\n\r\n    return  plugins.instantiate = instantiate;\r\n});\ndefine('skylark-domx-plugins-base/shortcutter',[\r\n    \"skylark-langx-types\",\r\n    \"./plugins\",\r\n    \"./instantiate\"\r\n], function(\r\n    types,\r\n    plugins,\r\n    instantiate\r\n) {\r\n    \"use strict\";\r\n\r\n    var slice = Array.prototype.slice;\r\n\r\n    function shortcutter(pluginName,extfn) {\r\n       /*\r\n        * Create or get or destory a plugin instance assocated with the element,\r\n        * and also you can execute the plugin method directory;\r\n        */\r\n        return function (elm,options) {\r\n            var  plugin = instantiate(elm, pluginName,\"instance\");\r\n            if ( options === \"instance\" ) {\r\n              return plugin || null;\r\n            }\r\n\r\n            if (!plugin) {\r\n                let args = slice.call(arguments,2); //2\r\n                args.unshift(elm, pluginName,typeof options == 'object' && options || {})\r\n                plugin = instantiate.apply(plugins,args);\r\n                if (typeof options != \"string\") {\r\n                  return this;\r\n                }\r\n            } \r\n            if (options) {\r\n                let args = slice.call(arguments,1); //2\r\n                if (extfn) {\r\n                    return extfn.apply(plugin,args);\r\n                } else {\r\n                    if (typeof options == 'string') {\r\n                        var methodName = options;\r\n\r\n                        if ( !plugin ) {\r\n                            throw new Error( \"cannot call methods on \" + pluginName +\r\n                                \" prior to initialization; \" +\r\n                                \"attempted to call method '\" + methodName + \"'\" );\r\n                        }\r\n\r\n                        if ( !types.isFunction( plugin[ methodName ] ) || methodName.charAt( 0 ) === \"_\" ) {\r\n                            throw new Error( \"no such method '\" + methodName + \"' for \" + pluginName +\r\n                                \" plugin instance\" );\r\n                        }\r\n\r\n                        args = slice.call(args,1); //remove method name\r\n\r\n                        var ret = plugin[methodName].apply(plugin,args);\r\n                        if (ret == plugin) {\r\n                          ret = undefined;\r\n                        }\r\n\r\n                        return ret;\r\n                    }                \r\n                }                \r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return  plugins.shortcutter = shortcutter;\r\n});\ndefine('skylark-domx-plugins-base/register',[\r\n    \"skylark-langx-types\",\r\n    \"skylark-domx-query\",\r\n    \"skylark-domx-velm\",\r\n    \"./plugins\",\r\n    \"./shortcutter\"\r\n], function(\r\n    types,\r\n    $, \r\n    elmx,\r\n    plugins,\r\n    shortcutter\r\n) {\r\n    \"use strict\";\r\n\r\n    var slice = Array.prototype.slice,\r\n        pluginKlasses = plugins.pluginKlasses,\r\n        shortcuts = plugins.shortcuts;\r\n\r\n    /*\r\n     * Register a plugin type\r\n     */\r\n    function register( pluginKlass,shortcutName,instanceDataName,extfn) {\r\n        var pluginName = pluginKlass.prototype.pluginName;\r\n        \r\n        pluginKlasses[pluginName] = pluginKlass;\r\n\r\n        if (shortcutName) {\r\n            if (instanceDataName && types.isFunction(instanceDataName)) {\r\n                extfn = instanceDataName;\r\n                instanceDataName = null;\r\n            } \r\n            if (instanceDataName) {\r\n                pluginName = pluginName + \":\" + instanceDataName;\r\n            }\r\n\r\n            var shortcut = shortcuts[shortcutName] = shortcutter(pluginName,extfn);\r\n                \r\n            $.fn[shortcutName] = function(options) {\r\n                var returnValue = this;\r\n\r\n                if ( !this.length && options === \"instance\" ) {\r\n                  returnValue = undefined;\r\n                } else {\r\n                  var args = slice.call(arguments);\r\n                  this.each(function () {\r\n                    var args2 = slice.call(args);\r\n                    args2.unshift(this);\r\n                    var  ret  = shortcut.apply(undefined,args2);\r\n                    if (ret !== undefined) {\r\n                        returnValue = ret;\r\n                    }\r\n                  });\r\n                }\r\n\r\n                return returnValue;\r\n            };\r\n\r\n            elmx.partial(shortcutName,function(options) {\r\n                var  ret  = shortcut(this._elm,options);\r\n                if (ret === undefined) {\r\n                    ret = this;\r\n                }\r\n                return ret;\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    return  plugins.register = register;\r\n});\ndefine('skylark-domx-plugins-base/main',[\r\n    \"skylark-domx-query\",\r\n    \"skylark-domx-velm\",\r\n\t\"./plugins\",\r\n\t\"./instantiate\",\r\n\t\"./plugin\",\r\n\t\"./register\",\r\n\t\"./shortcutter\"\r\n],function($,elmx,plugins,instantiate,Plugin,register,shortcutter){\r\n    \"use strict\";\r\n\r\n    var slice = Array.prototype.slice;\r\n\r\n    $.fn.plugin = function(name,options) {\r\n        var args = slice.call( arguments, 1 ),\r\n            self = this,\r\n            returnValue ;\r\n\r\n        this.each(function(){\r\n            returnValue = instantiate.apply(self,[this,name].concat(args));\r\n        });\r\n        return returnValue;\r\n    };\r\n\r\n    elmx.partial(\"plugin\",function(name,options) {\r\n        var args = slice.call( arguments, 1 );\r\n        return instantiate.apply(this,[this._elm,name].concat(args));\r\n    }); \r\n\r\n\treturn plugins;\r\n});\ndefine('skylark-domx-plugins-base', ['skylark-domx-plugins-base/main'], function (main) { return main; });\n\n"]}